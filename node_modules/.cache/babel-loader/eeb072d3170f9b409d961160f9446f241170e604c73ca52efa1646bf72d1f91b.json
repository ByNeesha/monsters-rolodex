{"ast":null,"code":"var _jsxFileName = \"/Users/neesha/Documents/GitHub/monsters-rolodex/src/App.tsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect, ChangeEvent } from \"react\";\n// import { getData } from \"./utils/data.utils\";\n// import CardList from \"./components/card-list/card-list.component\";\n// import SearchBox from \"./components/search-box/search-box.component\";\n// import \"./App.css\";\n// import \"./components/card-list/card-list.styles.css\";\n\n// export type Monster = {\n//   id: string;\n//   name: string;\n//   email: string;\n// };\n\n// const App = () => {\n//   const [searchField, setSearchField] = useState(\"\");\n//   const [monsters, setMonsters] = useState<Monster[]>([]);\n//   const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       const users = await getData<Monster[]>(\n//         `https://jsonplaceholder.typicode.com/users`\n//       );\n//       setMonsters(users);\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   useEffect(() => {\n//     const newFilteredMonsters = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchField);\n//     });\n\n//     setFilteredMonsters(newFilteredMonsters);\n//   }, [monsters, searchField]);\n\n//   const onSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\n//     const searchFieldString = event.target.value.toLocaleLowerCase();\n//     setSearchField(searchFieldString);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1 className=\"app-title\">Monsters Rolodex</h1>\n\n//       <SearchBox\n//         className=\"monsters-search-box\"\n//         onChangeHandler={onSearchChange}\n//         placeholder=\"Search monsters\"\n//       />\n//       <CardList monsters={filteredMonsters} />\n//     </div>\n//   );\n// };\n\n// export default App;\nimport { useState, useEffect } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport { getData } from \"./utils/data.utils\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchField, setSearchField] = useState(\"\");\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilterMonsters] = useState(monsters);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await getData(\"https://jsonplaceholder.typicode.com/users\");\n      setMonsters(users);\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    setFilterMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"monsters-search-box\",\n      onChangeHandler: onSearchChange,\n      placeholder: \"search monsters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MvyKw5tluND20PIci7qHSGvBw0c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","getData","jsxDEV","_jsxDEV","App","_s","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilterMonsters","fetchUsers","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchFieldString","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeHandler","placeholder","_c","$RefreshReg$"],"sources":["/Users/neesha/Documents/GitHub/monsters-rolodex/src/App.tsx"],"sourcesContent":["// import { useState, useEffect, ChangeEvent } from \"react\";\n// import { getData } from \"./utils/data.utils\";\n// import CardList from \"./components/card-list/card-list.component\";\n// import SearchBox from \"./components/search-box/search-box.component\";\n// import \"./App.css\";\n// import \"./components/card-list/card-list.styles.css\";\n\n// export type Monster = {\n//   id: string;\n//   name: string;\n//   email: string;\n// };\n\n// const App = () => {\n//   const [searchField, setSearchField] = useState(\"\");\n//   const [monsters, setMonsters] = useState<Monster[]>([]);\n//   const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       const users = await getData<Monster[]>(\n//         `https://jsonplaceholder.typicode.com/users`\n//       );\n//       setMonsters(users);\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   useEffect(() => {\n//     const newFilteredMonsters = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchField);\n//     });\n\n//     setFilteredMonsters(newFilteredMonsters);\n//   }, [monsters, searchField]);\n\n//   const onSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\n//     const searchFieldString = event.target.value.toLocaleLowerCase();\n//     setSearchField(searchFieldString);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1 className=\"app-title\">Monsters Rolodex</h1>\n\n//       <SearchBox\n//         className=\"monsters-search-box\"\n//         onChangeHandler={onSearchChange}\n//         placeholder=\"Search monsters\"\n//       />\n//       <CardList monsters={filteredMonsters} />\n//     </div>\n//   );\n// };\n\n// export default App;\nimport { useState, useEffect, ChangeEvent } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport { getData } from \"./utils/data.utils\";\nimport \"./App.css\";\n\nexport type Monster = {\n  id: string;\n  name: string;\n  email: string;\n};\n\nconst App = () => {\n  const [searchField, setSearchField] = useState(\"\");\n  const [monsters, setMonsters] = useState<Monster[]>([]);\n  const [filteredMonsters, setFilterMonsters] = useState(monsters);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await getData<Monster[]>(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      setMonsters(users);\n    };\n\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n    setFilterMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n\n  const onSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Monsters Rolodex</h1>\n\n      <SearchBox\n        className=\"monsters-search-box\"\n        onChangeHandler={onSearchChange}\n        placeholder=\"search monsters\"\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AACxD,SAASC,QAAQ,QAAQ,4CAA4C;AACrE,OAAOC,SAAS,MAAM,8CAA8C;AACpE,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAM,CAACa,gBAAgB,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAACW,QAAQ,CAAC;EAEhEV,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,KAAK,GAAG,MAAMZ,OAAO,CACzB,4CAA4C,CAC7C;MACDQ,WAAW,CAACI,KAAK,CAAC;IACpB,CAAC;IAEDD,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,MAAMgB,mBAAmB,GAAGN,QAAQ,CAACO,MAAM,CAAEC,OAAO,IAAK;MACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,iBAAiB,EAAE,CAACC,QAAQ,CAACb,WAAW,CAAC;IAC/D,CAAC,CAAC;IAEFK,iBAAiB,CAACG,mBAAmB,CAAC;EACxC,CAAC,EAAE,CAACN,QAAQ,EAAEF,WAAW,CAAC,CAAC;EAE3B,MAAMc,cAAc,GAAIC,KAAoC,IAAW;IACrE,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACN,iBAAiB,EAAE;IAChEX,cAAc,CAACe,iBAAiB,CAAC;EACnC,CAAC;EAED,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAIsB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAE/C3B,OAAA,CAACH,SAAS;MACRyB,SAAS,EAAC,qBAAqB;MAC/BM,eAAe,EAAEX,cAAe;MAChCY,WAAW,EAAC;IAAiB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7B,eACF3B,OAAA,CAACJ,QAAQ;MAACS,QAAQ,EAAEE;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEV,CAAC;AAACzB,EAAA,CAzCID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}